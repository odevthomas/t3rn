name: NodeJS with Webpack

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    # Faz o checkout do código
    - uses: actions/checkout@v4

    # Cache para dependências do Node.js (npm)
    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-modules-

    # Configura a versão do Node.js
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    # Instala as dependências
    - name: Install dependencies
      run: npm install

    # Roda os testes (se aplicável)
    - name: Run tests
      run: npm test

    # Rodando Webpack com a configuração de produção
    - name: Build with Webpack
      run: |
        npx webpack --config webpack.prod.js

    # Caso queira otimizar o build para produção
    # - name: Build production
    #   run: npm run build --production

    # Notificar caso a build falhe (opcional, mas útil)
    - name: Notify failure if build fails
      if: failure()
      run: echo "Build failed, notify team!"
